// C# program to demonstrate
// C-SCAN Disk Scheduling algorithm
using System;
using System.Collections.Generic;

class GFG {

	static int size = 8;
	static int disk_size = 200;

	static void CSCAN(int[] arr, int head)
	{
		int seek_count = 0;
		int distance, cur_track;

		List<int> left = new List<int>();
		List<int> right = new List<int>();
		List<int> seek_sequence = new List<int>();

		// Appending end values which has
		// to be visited before reversing
		// the direction
		left.Add(0);
		right.Add(disk_size - 1);

		// Tracks on the left of the
		// head will be serviced when
		// once the head comes back
		// to the beggining (left end).
		for (int i = 0; i < size; i++) {
			if (arr[i] < head)
				left.Add(arr[i]);
			if (arr[i] > head)
				right.Add(arr[i]);
		}

		// Sorting left and right vectors
		left.Sort();
		right.Sort();

		// First service the requests
		// on the right side of the
		// head.
		for (int i = 0; i < right.Count; i++) {
			cur_track = right[i];

			// Appending current track to seek sequence
			seek_sequence.Add(cur_track);

			// Calculate absolute distance
			distance = Math.Abs(cur_track - head);

			// Increase the total count
			seek_count += distance;

			// Accessed track is now new head
			head = cur_track;
		}

		// Once reached the right end
		// jump to the beggining.
		head = 0;

		// adding seek count for head returning from 199 to
		// 0
		seek_count += (disk_size - 1);

		// Now service the requests again
		// which are left.
		for (int i = 0; i < left.Count; i++) {
			cur_track = left[i];

			// Appending current track to
			// seek sequence
			seek_sequence.Add(cur_track);

			// Calculate absolute distance
			distance = Math.Abs(cur_track - head);

			// Increase the total count
			seek_count += distance;

			// Accessed track is now the new head
			head = cur_track;
		}

		Console.WriteLine("Total number of seek "
						+ "operations = " + seek_count);

		Console.WriteLine("Seek Sequence is");

		for (int i = 0; i < seek_sequence.Count; i++) {
			Console.WriteLine(seek_sequence[i]);
		}
	}

	// Driver code
	static void Main()
	{

		// Request array
		int[] arr = { 176, 79, 34, 60, 92, 11, 41, 114 };
		int head = 50;

		Console.WriteLine("Initial position of head: "
						+ head);

		CSCAN(arr, head);
	}
}

// This code is contributed by divyeshrabadiya07
